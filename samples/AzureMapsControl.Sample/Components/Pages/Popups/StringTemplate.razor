@page "/Popups/StringTemplate"
@rendermode InteractiveServer

@using AzureMapsControl.Components.Map
<AzureMap Id="map"
          EventActivationFlags="MapEventActivationFlags
                                .None()
                                .Enable(MapEventType.Ready)"
          OnReady="OnMapReady" />

@code  {

    public class PropertySubValues
    {
        public string SubValue { get; set; }
    }

    public async Task OnMapReady(MapEventArgs eventArgs)
    {
        var template = new AzureMapsControl.Components.Popups.PopupTemplate
        {
            Content = new AzureMapsControl.Components.Atlas.Either<string, IEnumerable<AzureMapsControl.Components.Atlas.PropertyInfo>, IEnumerable<AzureMapsControl.Components.Atlas.Either<string, IEnumerable<AzureMapsControl.Components.Atlas.PropertyInfo>>>>
                ("This template uses a string template with placeholders.<br/><br/> - Value 1 = {value1}<br/> - Value 2 = {value2/subValue}<br/> - Array value [2] = {arrayValue/2}"),
            NumberFormat = new AzureMapsControl.Components.Atlas.FormatOptions.NumberFormatOptions
            {
                MaximumFractionDigits = 2
            }
        };

        var properties = new Dictionary<string, object>
        {
            { "title", "Template 1 - String template" },
            { "value1", 1.2345678},
            { "value2", new PropertySubValues { SubValue = "Pizza" } },
            { "arrayValue", new [] { 3,4,5,6 } }
        };

        var position = new AzureMapsControl.Components.Atlas.Position(0, 0);

        var popup = new AzureMapsControl.Components.Popups.Popup(new AzureMapsControl.Components.Popups.PopupOptions {
            Position = position,
            OpenOnAdd = true
        });

        await eventArgs.Map.AddPopupAsync(popup, template, properties);
    }

}